name: Build and Test with Docker Compose v2
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - service: api-service
            port_var: API_PORT
            port: ${{ vars.API_PORT }}
        

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Crear archivo .env para las variables de entorno
      - name: Create env file
        run: |
          # Usar las variables del repositorio
          echo "API_PORT=${{ vars.API_PORT }}" >> .env
          echo "AUTH_PORT=${{ vars.AUTH_PORT }}" >> .env
          echo "SCRAPPER_PORT=3003" >> .env
          # Secrets
          echo "MONGODB_URI=${{ secrets.MONGODB_URI}}" >> .env

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build Docker image for ${{ matrix.service }}
        uses: docker/build-push-action@v2
        with:
          context: ./${{ matrix.service }}
          file: ./${{ matrix.service }}/docker/Dockerfile
          push: false
          tags: ${{ matrix.service }}:test
          load: true
          build-args: |
            ${{ matrix.port_var }}=${{ matrix.port }}

      - name: Run container for ${{ matrix.service }}
        run: |
          docker run -d --name test-container-${{ matrix.service }} \
            --env-file .env \
            -p ${{ matrix.port }}:${{ matrix.port }} \
            ${{ matrix.service }}:test
          sleep 5

      - name: Check running container
        run: docker ps

      - name: Run tests against container
        working-directory: ./${{ matrix.service }}
        env:
          # Usar las variables del repositorio
          API_PORT: ${{ vars.API_PORT }}
          AUTH_PORT: ${{ vars.AUTH_PORT }}
          SCRAPPER_PORT: 3003
        run: |
          npm install
          npm test

      - name: Stop and remove container
        if: always()
        run: docker stop test-container-${{ matrix.service }}

      - name: Collect container logs
        if: failure()
        run: docker logs test-container-${{ matrix.service }} > container-${{ matrix.service }}.log

      - name: Upload container logs
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: container-logs-${{ matrix.service }}
          path: container-${{ matrix.service }}.log
