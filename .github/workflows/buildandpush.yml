name: Build and Test with Docker Compose v2

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        service: [api-service, auth-service, scrapper-service]  # Agrega tus servicios aquí

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Debug secrets
        run: echo "DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }} DOCKER_TOKEN=${{ secrets.DOCKER_TOKEN }}"

      - name: Build Docker image for ${{ matrix.service }}
        uses: docker/build-push-action@v2
        with:
          context: ./${{ matrix.service }}
          file: ./${{ matrix.service }}/docker/Dockerfile
          push: false  # No subimos la imagen a Docker Hub
          tags: ${{ matrix.service }}:test  # Etiqueta temporal para pruebas

      - name: Run container for ${{ matrix.service }}
        run: |
          docker run -d --rm --name test-container-${{ matrix.service }} -P ${{ matrix.service }}:test
          sleep 5  # Dar tiempo al contenedor para iniciar correctamente

      - name: Run Jest tests for ${{ matrix.service }}
        working-directory: ./${{ matrix.service }}
        run: |
          npm install  # Asegúrate de que las dependencias necesarias estén instaladas
          npm run test  # Ejecuta las pruebas con Jest

      - name: Stop and remove container
        if: always()  # Detén el contenedor aunque las pruebas fallen
        run: docker stop test-container-${{ matrix.service }}
